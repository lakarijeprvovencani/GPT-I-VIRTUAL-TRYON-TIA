{% comment %}
  Virtual Try-On Widget Block
  Usage: Add this block to Product template in Theme customizer
{% endcomment %}

{%- liquid
  assign button_text = block.settings.button_text | default: 'Isprobaj'
  assign button_style = block.settings.button_style | default: 'primary'
  assign show_product_card = block.settings.show_product_card
  assign modal_title = block.settings.modal_title | default: 'Virtual Try-On'
  assign compact_mode = block.settings.compact_mode
-%}

<div class="vto-widget" 
     data-product-id="{{ product.id }}"
     data-variant-id="{{ product.selected_or_first_available_variant.id }}"
     data-product-handle="{{ product.handle }}"
     data-product-title="{{ product.title | escape }}"
     data-product-price="{{ product.selected_or_first_available_variant.price | money_without_currency }}"
     data-product-image="{{ product.featured_image | img_url: '300x300' }}"
     data-compact-mode="{{ compact_mode }}"
     {{ block.shopify_attributes }}>
  
  {%- if show_product_card -%}
    <div class="vto-product-card">
      <img src="{{ product.featured_image | img_url: '100x100', crop: 'center' }}" 
           alt="{{ product.title | escape }}" 
           class="vto-product-image">
      <div class="vto-product-info">
        <h4 class="vto-product-title">{{ product.title }}</h4>
        <p class="vto-product-price">{{ product.selected_or_first_available_variant.price | money }}</p>
      </div>
    </div>
  {%- endif -%}

  <button type="button" 
          class="vto-try-button vto-button--{{ button_style }}"
          onclick="openVirtualTryOn()">
    {{ button_text }}
  </button>

  <!-- Virtual Try-On Modal -->
  <div id="vto-modal" class="vto-modal" style="display: none;">
    <div class="vto-modal-content">
      <div class="vto-modal-header">
        <h3 class="vto-modal-title">{{ modal_title }}</h3>
        <button type="button" class="vto-modal-close" onclick="closeVirtualTryOn()">&times;</button>
      </div>
      
      <div class="vto-modal-body">
        <iframe id="vto-iframe" 
                src="https://gpt-virtual-tryon-tia.netlify.app?mode=compact&source=shopify&productId={{ product.id }}&variantId={{ product.selected_or_first_available_variant.id }}&handle={{ product.handle | url_encode }}&title={{ product.title | url_encode }}&price={{ product.selected_or_first_available_variant.price | money_without_currency | url_encode }}&image={{ product.featured_image | img_url: '300x300' | url_encode }}"
                frameborder="0"
                allow="camera; microphone"
                style="width: 100%; height: 600px; border: none;">
        </iframe>
      </div>
      
      <div class="vto-modal-footer">
        <button type="button" 
                id="vto-order-button" 
                class="vto-order-button vto-button--primary"
                style="display: none;"
                onclick="handleOrder()">
          Poruƒçi
        </button>
        <button type="button" 
                class="vto-button vto-button--secondary"
                onclick="closeVirtualTryOn()">
          Zatvori
        </button>
      </div>
    </div>
  </div>
</div>

<script>
  // Listen for postMessage from iframe
  window.addEventListener('message', function(event) {
    if (event.origin !== 'https://gpt-virtual-tryon-tia.netlify.app') return;
    
    if (event.data.type === 'vto:result' && event.data.ready === true) {
      // Show order button when virtual try-on is complete
      const orderButton = document.getElementById('vto-order-button');
      if (orderButton) {
        orderButton.style.display = 'inline-block';
      }
    }
  });

  function openVirtualTryOn() {
    const modal = document.getElementById('vto-modal');
    if (modal) {
      modal.style.display = 'flex';
      document.body.style.overflow = 'hidden';
    }
  }

  function closeVirtualTryOn() {
    const modal = document.getElementById('vto-modal');
    if (modal) {
      modal.style.display = 'none';
      document.body.style.overflow = 'auto';
      
      // Hide order button when closing
      const orderButton = document.getElementById('vto-order-button');
      if (orderButton) {
        orderButton.style.display = 'none';
      }
    }
  }

  function handleOrder() {
    const variantId = document.querySelector('.vto-widget').dataset.variantId;
    const productHandle = document.querySelector('.vto-widget').dataset.productHandle;
    
    // Option 1: Navigate to product page (current implementation)
    window.location.href = `/products/${productHandle}?variant=${variantId}`;
    
    // Option 2: AJAX add to cart (commented out for now)
    /*
    fetch('/cart/add.js', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        items: [{
          id: variantId,
          quantity: 1
        }]
      })
    })
    .then(response => response.json())
    .then(data => {
      // Refresh cart or show success message
      console.log('Added to cart:', data);
    })
    .catch(error => {
      console.error('Error adding to cart:', error);
    });
    */
  }

  // Close modal when clicking outside
  document.getElementById('vto-modal').addEventListener('click', function(event) {
    if (event.target === this) {
      closeVirtualTryOn();
    }
  });
</script>
